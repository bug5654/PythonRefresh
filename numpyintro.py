import numpy as np
from numpy import pi

a = np.arange(15).reshape(3, 5)
print("a: " + str(a))
print("a.shape(): " + str(a.shape))
print("a.ndim(): " + str(a.ndim))
print("a.itemsize(): " + str(a.itemsize))
print("a.size(): " + str(a.size))
print("type(a): " + str(type(a)))
b = np.array([6,7,8])
print("b: " + str(b))
print("type(b): " + str(type(b)))
c = np.array([1.2,3.5,5.1])
print("c: " + str(c))
d = np.array([ [  [1,2,3],[4,5,6] ],[ [7,8,9], [10,11,12]] ])
#d = np.array([ [  [1,2,3],[4,5,6] ],[ [7,8,9] ] ])
#1st is prettyprinted, 2nd is not
print("d: " + str(d))
f = np.array([[1,2],[3,4]], dtype=complex)
print("f: " + str(f))
print("np.zeros( (3,4) ): " + str(np.zeros( (3,4) )))
print("np.ones( (2,3,4), dtype=np.int16 ) : " + str(np.ones( (2,3,4), dtype=np.int16 ) ) )
print("np.empty( (2,3) )  : " + str(np.empty( (2,3) ) ))
print("np.arange( 10, 30, 5 )  : " + str(np.arange( 10, 30, 5 ) ))
print("np.arange( 0, 2, 0.3 )  : " + str(np.arange( 0, 2, 0.3 ) ) )
print("np.linspace( 0, 2, 9 )  : " + str(np.linspace( 0, 2, 9 )))
x = np.linspace( 0, 2*pi, 100 )
print("x=np.linspace( 0, 2*pi, 100 )  : " + str(np.linspace( 0, 2*pi, 100 ) ))
print("sin(x): " + str(np.sin(x)))
y = np.arange(12).reshape(4,3)
print("np.arange(12).reshape(4,3): \n" + str(y))
print("re-aranged: \n" + str(y.reshape(2,3,2)))
#matrix & vector math incoming
z = y.reshape(12)
t = np.arange(12)
print("flattened to 1d vector, *3 - original (should be double original):\n" 
		+ str(z*3-t))
I2 = np.array([[1,0],[0,1]])
A = np.array([[4,3],[7,2]])
print("A:\n" + str(A))
print("A*I2 (element-wise mul):\n" + str(A*I2))
print("A.dot(I2) (matrix mul):\n" + str(A.dot(I2)))
print("A.sum(axis=0)#cols: " + str(A.sum(axis=0)))
print("A.sum(axis=1)#rows: " + str(A.sum(axis=1)))
print("A.min(axis=0): " + str(A.min(axis=0)))
